<program> ::= main <block>;
<type name> ::= <type> {<name>, } ;
<const type name> ::= const <type name>;
<function> ::= def <name> <parameters> <block>;
<parameters> ::= <type> <name> {, <type> <name>}; 
<block> ::= ’{‘ { [<operator> ';' | <type> <name> ';'] } ‘}’;
<in> ::= cin(<name>);
<out> ::= cout (<name> | <string const> );
<type> ::= <num type> | <array type> | <char like type>;
<num type> ::= <integer type> | <float>;
<integer type> ::= int | int64;
<integer const> ::= [0..9]<integer const>;
<num const> ::= <real const> | <integer const>
<string const> ::= '\"'{ <symbol> }'\"';
<float> ::= float;
<array type> ::= <dynamic array> | <string>;
<dynamic array> ::= array '<' <type> '>'
<string> ::= <float string>;
<float string> ::= string;
<bin op> ::= <math bin op> | <logic bin op> | <byte bin op>;
<math bin op> ::= + | - | / | * | % | ^;
<math prior 1> ::= ^ | %;
<math prior 2> ::= * | /;
<math prior 3> ::= - | +;
<logic bin op> ::= and | or;
<logic bin prior 1> ::= and
<logic bin prior 2> ::= or;
<byte bin op> ::= & | |;
<increment> ::= ++ | --;
<logical> ::= !;
<if op> ::= if (<exp>) <block> | if (<exp>) <block> <else op>;
<else op> ::= else <block>;
<while op> ::= while (<exp>) <block>;
<for op> ::= for (<exp> | <type> <name> <description> ';' <exp> ';' <exp>) <block>; 
